{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leohu\\\\OneDrive\\\\Desktop\\\\Progetto_Fitness\\\\fitness-frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); // ✅ Stato per messaggi di errore\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    const sanitizedUsername = username.trim().toLowerCase();\n\n    // ✅ Controllo campi vuoti\n    if (!sanitizedUsername || !password) {\n      setErrorMessage(\"⚠️ Inserisci username e password!\");\n      return;\n    }\n    setErrorMessage(\"\"); // Resetta l'errore prima di tentare il login\n\n    try {\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: sanitizedUsername,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(`✅ Benvenuto, ${data.user.username}!`);\n        navigate(`/exercises/${data.user.username}`);\n      } else {\n        setErrorMessage(`❌ ${data.message}`); // Mostra il messaggio di errore ricevuto\n      }\n    } catch (error) {\n      console.error(\"Errore durante il login:\", error);\n      setErrorMessage(\"❌ Errore di connessione. Riprova.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Inserisci username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Inserisci password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Accedi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OcEh96ookApaGYrUhZcJPgbvkKE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","navigate","handleLogin","sanitizedUsername","trim","toLowerCase","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","user","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/leohu/OneDrive/Desktop/Progetto_Fitness/fitness-frontend/src/components/Login.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // ✅ Stato per messaggi di errore\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    const sanitizedUsername = username.trim().toLowerCase();\r\n\r\n    // ✅ Controllo campi vuoti\r\n    if (!sanitizedUsername || !password) {\r\n      setErrorMessage(\"⚠️ Inserisci username e password!\");\r\n      return;\r\n    }\r\n\r\n    setErrorMessage(\"\"); // Resetta l'errore prima di tentare il login\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username: sanitizedUsername, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert(`✅ Benvenuto, ${data.user.username}!`);\r\n        navigate(`/exercises/${data.user.username}`);\r\n      } else {\r\n        setErrorMessage(`❌ ${data.message}`); // Mostra il messaggio di errore ricevuto\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Errore durante il login:\", error);\r\n      setErrorMessage(\"❌ Errore di connessione. Riprova.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Login</h2>\r\n\r\n      {/* ✅ Messaggio di errore visibile */}\r\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Inserisci username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Inserisci password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin}>Accedi</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}