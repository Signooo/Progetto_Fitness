{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leohu\\\\OneDrive\\\\Desktop\\\\Progetto_Fitness\\\\fitness-frontend\\\\src\\\\components\\\\ExerciseForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./ExerciseForm.css\"; // Importiamo il CSS per lo stile\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExerciseForm = ({\n  username,\n  fetchExercises\n}) => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [reps, setReps] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Stato per il messaggio di errore\n\n  const handleAddExercise = async () => {\n    // Verifica che tutti i campi siano compilati\n    if (!name || !weight || !reps) {\n      setErrorMessage(\"⚠️ Per favore, completa tutti i campi!\");\n      return;\n    }\n\n    // Converti i valori in numero\n    const weightValue = Number(weight);\n    const repsValue = Number(reps);\n\n    // ✅ Controllo range\n    if (weightValue < 1 || weightValue > 300) {\n      setErrorMessage(\"⚠️ Il peso deve essere tra 1 e 300 kg!\");\n      return;\n    }\n    if (repsValue < 1 || repsValue > 100) {\n      setErrorMessage(\"⚠️ Le ripetizioni devono essere tra 1 e 100!\");\n      return;\n    }\n\n    // Reset del messaggio di errore\n    setErrorMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/exercise\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          name,\n          weight: weightValue,\n          reps: repsValue\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"✅ Esercizio aggiunto con successo!\");\n        fetchExercises();\n        // Reset dei campi\n        setName(\"\");\n        setWeight(\"\");\n        setReps(\"\");\n      } else {\n        alert(`❌ Errore: ${data.message}`);\n      }\n    } catch (error) {\n      console.error(\"❌ Errore durante l'aggiunta dell'esercizio:\", error);\n      alert(\"❌ Errore durante l'aggiunta dell'esercizio.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Aggiungi Esercizio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: name,\n      onChange: e => setName(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Seleziona esercizio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Panca Piana\",\n        children: \"Panca Piana\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Stacco\",\n        children: \"Stacco\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Squat\",\n        children: \"Squat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Peso (kg)\",\n      value: weight,\n      onChange: e => setWeight(e.target.value),\n      min: \"1\",\n      max: \"300\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Ripetizioni\",\n      value: reps,\n      onChange: e => setReps(e.target.value),\n      min: \"1\",\n      max: \"100\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddExercise,\n      children: \"Aggiungi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ExerciseForm, \"fFtc187NFBGl/G+N4DCygY95Ahw=\");\n_c = ExerciseForm;\nexport default ExerciseForm;\nvar _c;\n$RefreshReg$(_c, \"ExerciseForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ExerciseForm","username","fetchExercises","_s","name","setName","weight","setWeight","reps","setReps","errorMessage","setErrorMessage","handleAddExercise","weightValue","Number","repsValue","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","value","onChange","e","target","type","placeholder","min","max","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/leohu/OneDrive/Desktop/Progetto_Fitness/fitness-frontend/src/components/ExerciseForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./ExerciseForm.css\"; // Importiamo il CSS per lo stile\r\n\r\nconst ExerciseForm = ({ username, fetchExercises }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [reps, setReps] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Stato per il messaggio di errore\r\n\r\n  const handleAddExercise = async () => {\r\n    // Verifica che tutti i campi siano compilati\r\n    if (!name || !weight || !reps) {\r\n      setErrorMessage(\"⚠️ Per favore, completa tutti i campi!\");\r\n      return;\r\n    }\r\n\r\n    // Converti i valori in numero\r\n    const weightValue = Number(weight);\r\n    const repsValue = Number(reps);\r\n\r\n    // ✅ Controllo range\r\n    if (weightValue < 1 || weightValue > 300) {\r\n      setErrorMessage(\"⚠️ Il peso deve essere tra 1 e 300 kg!\");\r\n      return;\r\n    }\r\n    if (repsValue < 1 || repsValue > 100) {\r\n      setErrorMessage(\"⚠️ Le ripetizioni devono essere tra 1 e 100!\");\r\n      return;\r\n    }\r\n\r\n    // Reset del messaggio di errore\r\n    setErrorMessage(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/exercise\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username, name, weight: weightValue, reps: repsValue }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert(\"✅ Esercizio aggiunto con successo!\");\r\n        fetchExercises();\r\n        // Reset dei campi\r\n        setName(\"\");\r\n        setWeight(\"\");\r\n        setReps(\"\");\r\n      } else {\r\n        alert(`❌ Errore: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Errore durante l'aggiunta dell'esercizio:\", error);\r\n      alert(\"❌ Errore durante l'aggiunta dell'esercizio.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"exercise-form\">\r\n      <h3>Aggiungi Esercizio</h3>\r\n\r\n      {/* Mostra il messaggio di errore se c'è un problema */}\r\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n\r\n      <select value={name} onChange={(e) => setName(e.target.value)}>\r\n        <option value=\"\">Seleziona esercizio</option>\r\n        <option value=\"Panca Piana\">Panca Piana</option>\r\n        <option value=\"Stacco\">Stacco</option>\r\n        <option value=\"Squat\">Squat</option>\r\n      </select>\r\n\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Peso (kg)\"\r\n        value={weight}\r\n        onChange={(e) => setWeight(e.target.value)}\r\n        min=\"1\"\r\n        max=\"300\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Ripetizioni\"\r\n        value={reps}\r\n        onChange={(e) => setReps(e.target.value)}\r\n        min=\"1\"\r\n        max=\"100\"\r\n        required\r\n      />\r\n      <button onClick={handleAddExercise}>Aggiungi</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}