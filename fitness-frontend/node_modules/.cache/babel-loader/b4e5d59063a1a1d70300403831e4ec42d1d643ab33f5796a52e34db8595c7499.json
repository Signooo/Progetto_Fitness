{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leohu\\\\OneDrive\\\\Desktop\\\\Progetto_Fitness\\\\fitness-frontend\\\\src\\\\components\\\\ExercisePage.js\",\n  _s = $RefreshSig$();\n// src/components/ExercisePage.js\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ExerciseForm from \"./ExerciseForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExercisePage = () => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [exercises, setExercises] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // ✅ Funzione per recuperare gli esercizi dell'utente\n  const fetchExercises = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/exercises/${username}`);\n      const data = await response.json();\n      if (response.ok) {\n        setExercises(data);\n      } else {\n        alert(`❌ Errore: ${data.message}`);\n      }\n    } catch (error) {\n      console.error(\"❌ Errore nel recupero degli esercizi:\", error);\n      alert(\"❌ Errore nel recupero degli esercizi.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchExercises();\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Esercizi di \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Caricamento in corso...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : exercises.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u26A0\\uFE0F Nessun esercizio registrato.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Peso (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ripetizioni\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: exercise.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exercise.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exercise.reps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(exercise.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseForm, {\n      username: username,\n      fetchExercises: fetchExercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisePage, \"OdJ1ZOJfn/B6G16YhsDmc1xbNPI=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["useEffect","useState","useParams","ExerciseForm","jsxDEV","_jsxDEV","ExercisePage","_s","username","exercises","setExercises","loading","setLoading","fetchExercises","response","fetch","data","json","ok","alert","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","border","map","exercise","index","name","weight","reps","Date","date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/leohu/OneDrive/Desktop/Progetto_Fitness/fitness-frontend/src/components/ExercisePage.js"],"sourcesContent":["// src/components/ExercisePage.js\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ExerciseForm from \"./ExerciseForm\";\r\n\r\nconst ExercisePage = () => {\r\n  const { username } = useParams();\r\n  const [exercises, setExercises] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // ✅ Funzione per recuperare gli esercizi dell'utente\r\n  const fetchExercises = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/exercises/${username}`);\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setExercises(data);\r\n      } else {\r\n        alert(`❌ Errore: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Errore nel recupero degli esercizi:\", error);\r\n      alert(\"❌ Errore nel recupero degli esercizi.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchExercises();\r\n  }, [username]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Esercizi di {username}</h2>\r\n\r\n      {/* ✅ Mostra un messaggio se gli esercizi sono ancora in caricamento */}\r\n      {loading ? (\r\n        <p>Caricamento in corso...</p>\r\n      ) : exercises.length === 0 ? (\r\n        <p>⚠️ Nessun esercizio registrato.</p>\r\n      ) : (\r\n        <table border=\"1\">\r\n          <thead>\r\n            <tr>\r\n              <th>Nome</th>\r\n              <th>Peso (kg)</th>\r\n              <th>Ripetizioni</th>\r\n              <th>Data</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {exercises.map((exercise, index) => (\r\n              <tr key={index}>\r\n                <td>{exercise.name}</td>\r\n                <td>{exercise.weight}</td>\r\n                <td>{exercise.reps}</td>\r\n                <td>{new Date(exercise.date).toLocaleDateString()}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      {/* ✅ Modulo per aggiungere esercizi */}\r\n      <ExerciseForm username={username} fetchExercises={fetchExercises} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExercisePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}