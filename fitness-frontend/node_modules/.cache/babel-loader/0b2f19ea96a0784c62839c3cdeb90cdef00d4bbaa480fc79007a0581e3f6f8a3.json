{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leohu\\\\OneDrive\\\\Desktop\\\\Progetto_Fitness\\\\fitness-frontend\\\\src\\\\components\\\\ExercisePage.js\",\n  _s = $RefreshSig$();\n// src/components/ExercisePage.js\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ExerciseForm from \"./ExerciseForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExercisePage = () => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [exercises, setExercises] = useState([]);\n\n  // Funzione per ottenere gli esercizi\n  const fetchExercises = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/exercises/${username}`);\n      const data = await response.json();\n      if (response.ok) {\n        setExercises(data);\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error(\"Errore nel recupero degli esercizi:\", error);\n      alert(\"Errore nel recupero degli esercizi.\");\n    }\n  };\n\n  // Chiamata per ottenere gli esercizi all'inizio\n  useEffect(() => {\n    fetchExercises();\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Esercizi di \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Storico Esercizi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nome Esercizio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso (kg)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ripetizioni\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: exercise.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [exercise.weight, \" kg\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [exercise.reps, \" reps\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(exercise.date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseForm, {\n      username: username,\n      fetchExercises: fetchExercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisePage, \"aCN5u+r0ZRvdRAdsvL1vO00xHcI=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["useEffect","useState","useParams","ExerciseForm","jsxDEV","_jsxDEV","ExercisePage","_s","username","exercises","setExercises","fetchExercises","response","fetch","data","json","ok","alert","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","exercise","index","name","weight","reps","Date","date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/leohu/OneDrive/Desktop/Progetto_Fitness/fitness-frontend/src/components/ExercisePage.js"],"sourcesContent":["// src/components/ExercisePage.js\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ExerciseForm from \"./ExerciseForm\";\r\n\r\nconst ExercisePage = () => {\r\n  const { username } = useParams();\r\n  const [exercises, setExercises] = useState([]);\r\n\r\n  // Funzione per ottenere gli esercizi\r\n  const fetchExercises = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/exercises/${username}`);\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setExercises(data);\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Errore nel recupero degli esercizi:\", error);\r\n      alert(\"Errore nel recupero degli esercizi.\");\r\n    }\r\n  };\r\n\r\n  // Chiamata per ottenere gli esercizi all'inizio\r\n  useEffect(() => {\r\n    fetchExercises();\r\n  }, [username]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Esercizi di {username}</h2>\r\n\r\n      {/* Tabella degli esercizi */}\r\n      <div className=\"exercise-table\">\r\n        <h3>Storico Esercizi</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Nome Esercizio</th>\r\n              <th>Peso (kg)</th>\r\n              <th>Ripetizioni</th>\r\n              <th>Data</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {exercises.map((exercise, index) => (\r\n              <tr key={index}>\r\n                <td>{exercise.name}</td>\r\n                <td>{exercise.weight} kg</td>\r\n                <td>{exercise.reps} reps</td>\r\n                <td>{new Date(exercise.date).toLocaleDateString()}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Form per aggiungere nuovi esercizi */}\r\n      <ExerciseForm username={username} fetchExercises={fetchExercises} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExercisePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}